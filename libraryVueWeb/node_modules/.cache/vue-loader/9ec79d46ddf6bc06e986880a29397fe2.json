{"remainingRequest":"D:\\library\\libraryVueWeb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\library\\libraryVueWeb\\src\\views\\message\\components\\Timeline.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\library\\libraryVueWeb\\src\\views\\message\\components\\Timeline.vue","mtime":1594044749945},{"path":"D:\\library\\libraryVueWeb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1575272867830},{"path":"D:\\library\\libraryVueWeb\\node_modules\\babel-loader\\lib\\index.js","mtime":1575272866404},{"path":"D:\\library\\libraryVueWeb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1575272867830},{"path":"D:\\library\\libraryVueWeb\\node_modules\\vue-loader\\lib\\index.js","mtime":1575272905142}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Sticky from '@/components/Sticky'\nimport Tinymce from '@/components/Tinymce'\nimport axios from 'axios';\nimport permission from '@/directive/permission/index.js' // 权限判断指令\nimport gettoken from '../../../../src/store/modules/user.js'\nexport default {\n  directives: {\n    permission\n  },\n  components: {\n    Tinymce,\n    Sticky\n  },\n  data() {\n    return {\n      dialogVisible: false,\n      initSuccess: false,\n      showmessagetext:false,\n      timeline: [],\n      tag: true,\n      msg: '',\n      totalCount: 1,\n      detailList: {\n\n        content: '',\n        mesID: '',\n        readID: '',\n        addtime: '',\n\n\n      },\n      postForm: {\n        content: '', // 文章内容\n      },\n      rules: {\n\n        content: [{\n            required: true,\n            message: '请输入发布内容',\n            trigger: 'blur'\n          },\n          {\n            min: 2,\n            max: 2000,\n            message: '生成的html长度在 2 到 2000 个字符',\n            trigger: 'blur'\n          }\n        ],\n\n      },\n\n    }\n  },\n  created() {\n\n    this.getList()\n  },\n  methods: {\n    getList() {\n      var vm = this\n      let mytoken = gettoken.state.token\n      const path = 'http://127.0.0.1:5000/api/message';\n      axios.get(path, {\n          params: {\n            token: mytoken\n          }\n        })\n        .then((res) => {\n          vm.timeline = res.data;\n          // vm.totalCount=Object.keys(this.list).length;\n          vm.initSuccess = true\n          vm.$message({\n            message: '数据加载完成',\n            type: 'success'\n          });\n        })\n        .catch((error) => {\n\n          vm.$message({\n            type: 'info',\n            message: '获取数据失败，请检查网络' + error\n          });\n\n        });\n\n\n    },\n    handleDelete(row) {\n      var vm = this\n      this.$confirm('您即将删除一条留言，确定吗', '提示', {\n        confirmButtonText: '确定删除',\n        cancelButtonText: '点错了',\n        type: 'warning'\n      }).then(() => {\n        axios.post('http://127.0.0.1:5000/api/deletemessage', {\n\n            mesID: row.mesID\n          })\n\n          .then(function(response) {\n            //  this.$refs[temp].resetFields();\n            vm.$message({\n              type: 'success',\n              message: '删除成功!'\n            });\n          })\n          .catch(function(error) {\n            vm.$message({\n              type: 'info',\n              message: error\n            });\n          })\n\n        setTimeout(() => {\n          this.getList()\n        }, 1.5 * 1000)\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '已取消删除'\n        });\n      });\n    },\n    detail(item) {\n      this.detailList.addtime = item.addtime;\n      this.detailList.content = item.content;\n      this.detailList.mesID = item.mesID;\n      this.detailList.readID = item.readID;\n\n\n      this.dialogVisible = true\n    },\n    tableRowClassName({\n      row,\n      rowIndex\n    }) {\n      if (row.important == 1) {\n        return 'important_1';\n      } else if (row.important == 2) {\n        return 'important_2';\n      } else if (row.important == 3) {\n        return 'important_3';\n      }\n      return '';\n    },\n    submitForm() {\n      var vm = this\n      console.log(this.postForm)\n      const path = 'http://127.0.0.1:5000/api/remessage';\n      axios.post(path, {\n          content: '<h3>回复消息</h3>'+vm.postForm.content + '<hr /> <h4>消息原文</h4>'+ vm.detailList.content,\n          readid: vm.detailList.readID,\n          token: gettoken.state.token\n        })\n\n        .then(function(response) {\n          //  this.$refs[temp].resetFields();\n            vm.$message({\n              message: '发送成功',\n              type: 'success'\n            });\n            vm.detailList.content='';\n            vm.showmessagetext=false;\n\n        })\n        .catch(function(error) {\n          vm.$message({\n            type: 'info',\n            message: '发布失败'\n          });\n\n        })\n      this.loading = false\n    },\n    handleReMes(row){\n      this.detailList.content=row.content;\n      this.detailList.mesID=row.mesID;\n      this.detailList.readID= row.readID;\n      this.detailList.addtime= row.addtime;\n      this.showmessagetext=true;\n    }\n  }\n}\n",null]}