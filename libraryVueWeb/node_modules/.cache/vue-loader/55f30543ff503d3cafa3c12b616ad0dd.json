{"remainingRequest":"D:\\library\\libraryVueWeb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\library\\libraryVueWeb\\src\\views\\borrowlist\\export-excel.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\library\\libraryVueWeb\\src\\views\\borrowlist\\export-excel.vue","mtime":1594087525863},{"path":"D:\\library\\libraryVueWeb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1575272867830},{"path":"D:\\library\\libraryVueWeb\\node_modules\\babel-loader\\lib\\index.js","mtime":1575272866404},{"path":"D:\\library\\libraryVueWeb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1575272867830},{"path":"D:\\library\\libraryVueWeb\\node_modules\\vue-loader\\lib\\index.js","mtime":1575272905142}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { fetchList } from '@/api/article'\r\nimport { parseTime } from '@/utils'\r\n// options components\r\nimport FilenameOption from './components/FilenameOption'\r\nimport AutoWidthOption from './components/AutoWidthOption'\r\nimport BookTypeOption from './components/BookTypeOption'\r\nimport axios from 'axios';\nimport gettoken from '../../../src/store/modules/user.js'\r\nexport default {\r\n  name: 'ExportExcel',\r\n  components: { FilenameOption, AutoWidthOption, BookTypeOption },\r\n  data() {\r\n    return {\r\n      list: null,\r\n      listLoading: true,\r\n      downloadLoading: false,\r\n      filename: '借阅信息表',\r\n      autoWidth: true,\r\n      bookType: 'xlsx',\n\r\n    }\r\n  },\r\n  created() {\r\n    this.fetchData()\r\n  },\r\n  methods: {\r\n    fetchData() {\r\n      this.listLoading = true\n      var vm=this\n      this.loading=true;\n      const path = 'http://127.0.0.1:5000/api/getBorrowList';\n            axios.get(path,{params:{token:gettoken.state.token}\n               \n              })\n              .then((res) => {\n                this.list = res.data;\n                this.listLoading = false\n              })\n              .catch((error) => {\n                // eslint-disable-next-line\n                vm.$message({\n                        type: 'info',\n                        message: '出错啦！获取数据失败'\n                });\n                this.loading=false\n              });\r\n    },\r\n    handleDownload() {\r\n      this.downloadLoading = true\r\n      import('@/vendor/Export2Excel').then(excel => {\r\n        const tHeader = [ '书名', 'ISDN', '用户ID', '用户姓名','专业','借阅时间','剩余天数']\r\n        const filterVal = [ 'bookName', 'ISDN', 'readID', 'username','major','time','leftday']\r\n        const list = this.list\r\n        const data = this.formatJson(filterVal, list)\r\n        excel.export_json_to_excel({\r\n          header: tHeader,\r\n          data,\r\n          filename: this.filename,\r\n          autoWidth: this.autoWidth,\r\n          bookType: this.bookType\r\n        })\r\n        this.downloadLoading = false\r\n      })\r\n    },\r\n    formatJson(filterVal, jsonData) {\r\n      return jsonData.map(v => filterVal.map(j => {\r\n        if (j === 'timestamp') {\r\n          return parseTime(v[j])\r\n        } else {\r\n          return v[j]\r\n        }\r\n      }))\r\n    },\n    handleUrge(row) {\n      var vm=this\n        this.$confirm('确认给所有超期用户发送催收通知吗', '提示', {\n                  confirmButtonText: '确定',\n                  cancelButtonText: '取消',\n                  type: 'warning'\n                }).then(() => {\n                  axios.post('http://127.0.0.1:5000/api/urge', {\n                    \n                     token:gettoken.state.token\n\n                    })\n\n                    .then(function (response) {\n                    //  this.$refs[temp].resetFields();\n                      vm.$message({\n                          type: 'success',\n                          message: '操作成功!'\n                        });\n                    })\n                    .catch(function (error) {\n                      vm.$message({\n                          type: 'info',\n                          message: error\n                        });\n                  })\n\n                  setTimeout(() => {\n                    this.fetchData()\n                  }, 1.5 * 1000)\n                }).catch(() => {\n                  this.$message({\n                    type: 'info',\n                    message: '已取消操作'\n                  });\n                });\n    },\r\n  }\r\n}\r\n",null]}