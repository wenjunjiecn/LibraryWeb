{"remainingRequest":"D:\\library\\libraryVueWeb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\library\\libraryVueWeb\\src\\views\\search\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\library\\libraryVueWeb\\src\\views\\search\\index.vue","mtime":1594172064754},{"path":"D:\\library\\libraryVueWeb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1575272867830},{"path":"D:\\library\\libraryVueWeb\\node_modules\\babel-loader\\lib\\index.js","mtime":1575272866404},{"path":"D:\\library\\libraryVueWeb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1575272867830},{"path":"D:\\library\\libraryVueWeb\\node_modules\\vue-loader\\lib\\index.js","mtime":1575272905142}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport permission from '@/directive/permission/index.js'\r\nimport axios from 'axios';\nimport gettoken from '../../../src/store/modules/user.js'\nimport store from '../../store/modules/user'\r\nexport default {\r\n  name: 'ComplexTable',\r\n  directives: { permission },\r\n  filters: {\r\n\r\n  },\r\n  data() {\n    var checkNum = (rule, value, callback) => {\n            if (!value) {\n              return callback(new Error('数量不能为空或小于等于0'));\n            }\n            setTimeout(() => {\n              if (!Number.isInteger(value)) {\n                callback(new Error('请输入数字值'));\n              } else {\n                if (value < 0) {\n                  callback(new Error('数量必须大于0'));\n                } else {\n                  callback();\n                }\n              }\n            }, 1000);\n          };\n\r\n    return {\r\n       list:[],\r\n       loading:false,\r\n       userid:store.state.name,\r\n       input: '',\n       searchoptions: [{\n                 value: 'bookName',\n                 label: '书名'\n               }, {\n                 value: 'author',\n                 label: '作者'\n               }, {\n                 value: 'ISDN',\n                 label: 'ISDN'\n               }, {\n                 value: 'publisher',\n                 label: '出版社'\n               }\n               ],\r\n       options: [{\r\n                 value: '艺术',\r\n                 label: '艺术'\r\n               }, {\r\n                 value: '文学',\r\n                 label: '文学'\r\n               }, {\r\n                 value: '自然学科',\r\n                 label: '自然学科'\r\n               }, {\r\n                 value: '数理科学',\r\n                 label: '数理科学'\r\n               }\r\n               ],\r\n        value: 'bookName',\n        words:null,\r\n        dialogFormVisible:false,\n        editVisible:false,\r\n        temp:{\r\n          bookName:'',\n          author:'',\r\n          ISDN:'',\r\n          publisher:'',\r\n          category:'',\r\n          num:''\r\n        },\n        edit:{\n          bookName:'',\n          author:'',\n          ISDN:'',\n          publisher:'',\n          category:'',\n          num:''\n        },\n        resetEditMes:{\n          bookName:'',\n          author:'',\n          ISDN:'',\n          publisher:'',\n          category:'',\n          num:''\n        },\r\n         // 约束条件还没写完\r\n        rules: {\r\n            bookName: [\r\n              { required: true, message: '请输入书名', trigger: 'blur' },\r\n              { min: 1, max: 50, message: '长度在 1 到 50 个字符/中文', trigger: 'blur' }\r\n            ],\n            author: [\n              { required: true, message: '请输入作者名', trigger: 'blur' },\n              { min: 1, max: 50, message: '长度在 1 到 50 个字符/中文', trigger: 'blur' }\n            ],\r\n            ISDN: [\r\n              { required: true, message: '请输入ISBN', trigger: 'blur' },\r\n              { min: 13, max: 13, message: '长度在 13个字符', trigger: 'blur' },\n\r\n            ],\r\n            publisher: [\r\n              { required: true, message: '请输入出版社', trigger: 'blur' },\r\n              { min: 1, max: 50, message: '长度在 1 到 50 个字符/中文', trigger: 'blur' }\r\n            ],\r\n            category: [\r\n              { required: true, message: '请输入分类', trigger: 'blur' },\r\n              { min: 1, max: 10, message: '长度在 1 到 10 个字符', trigger: 'blur' }\r\n            ],\r\n            num: [\r\n\n                { validator: checkNum, trigger: 'blur' }\r\n            ]\r\n\r\n          },\r\n\r\n\r\n         // 默认显示第几页\r\n         currentPage:1,\r\n         // 总条数，根据接口获取数据长度\r\n         totalCount:1,\r\n         // 个数选择器\r\n         pageSizes:[10,20,30,40],\r\n         // 默认每页显示的条数（可修改）\r\n         PageSize:10,\r\n    }\r\n  },\r\n  created() {\r\n    this.initList()\r\n\r\n  },\r\n  methods: {\n\n    handleEdit(row) {\n\n        this.edit.bookName=row.bookName;\n        this.edit.author=row.author;\n        this.edit.ISDN=row.ISDN;\n        this.edit.publisher=row.publisher;\n        this.edit.category=row.category;\n        this.edit.num=Number(row.num);\n\n        this.resetEditMes.bookName=row.bookName;\n        this.resetEditMes.author=row.author;\n        this.resetEditMes.ISDN=row.ISDN;\n        this.resetEditMes.publisher=row.publisher;\n        this.resetEditMes.category=row.category;\n        this.resetEditMes.num=Number(row.num);\n        this.editVisible=true\n\n    },\n    handleDelete(row) {\n      var vm=this\n        this.$confirm('此操作将永久删除《'+row.bookName+'》，确定吗', '提示', {\n                  confirmButtonText: '确定',\n                  cancelButtonText: '取消',\n                  type: 'warning'\n                }).then(() => {\n                  axios.post('http://127.0.0.1:5000/api/deletebook', {\n                     bookName:row.bookName,\n                     author:row.author,\n                     ISDN:row.ISDN,\n                     publisher:row.publisher,\n                     category:row.category,\n                     num:row.num\n                    })\n\n                    .then(function (response) {\n                    //  this.$refs[temp].resetFields();\n                      vm.$message({\n                          type: 'success',\n                          message: '删除成功!'\n                        });\n                        \n                    })\n                    .catch(function (error) {\n                      vm.$message({\n                          type: 'info',\n                          message: error\n                        });\n                  })\n\n                  setTimeout(() => {\n                    this.initList()\n                  }, 1.5 * 1000)\n                }).catch(() => {\n                  this.$message({\n                    type: 'info',\n                    message: '已取消删除'\n                  });\n                });\n    },\r\n    handleAppoint(row) {\r\n      var vm=this\r\n      if(row.num<=0){\r\n        vm.$message({\r\n                type: 'error',\r\n                message: '该书剩余量为0,无法预约!'\r\n              });\r\n      }else{\r\n\r\n        this.$confirm('您要预约《'+row.bookName+'》，确定吗', '提示', {\r\n                  confirmButtonText: '确定',\r\n                  cancelButtonText: '取消',\r\n                  type: 'info'\r\n                }).then(() => {\r\n                  axios.post('http://127.0.0.1:5000/api/regist', {\r\n                     isdn:row.ISDN,\r\n                     userid:vm.userid,\r\n                     author:row.author,\r\n                     bookname:row.bookName\r\n                    })\r\n\r\n                    .then(function (response) {\r\n                    //  this.$refs[temp].resetFields();\r\n                      if(response.data=='已经借阅'){\r\n                        vm.$message({\r\n                                type: 'error',\r\n                                message: '您已借阅该本图书，请勿重复借阅'\r\n                              });\r\n                      }\r\n                      else if(response.data=='已经预约'){\r\n                        vm.$message({\r\n                                type: 'error',\r\n                                message: '您已经预约了改本图书，请勿重复预约'\r\n                              });\r\n                      }\r\n                      else{\r\n                        vm.$message({\r\n                                type: 'success',\r\n                                message: '预约成功!'\r\n                              });\r\n                      }\r\n                      \r\n                    })\r\n                    .catch(function (error) {\r\n                      vm.$message({\r\n                          type: 'info',\r\n                          message: error\r\n                        });\r\n                  })\r\n\r\n                  setTimeout(() => {\r\n                    this.initList()\r\n                  }, 1.5 * 1000)\r\n                }).catch(() => {\r\n                  this.$message({\r\n                    type: 'info',\r\n                    message: '已取消删除'\r\n                  });\r\n                });\r\n      }\r\n\r\n    },\r\n    initList(){\n      var vm=this\n      this.loading=true;\n      const path = 'http://127.0.0.1:5000/api/books';\n            axios.get(path)\n              .then((res) => {\n                this.list = res.data;\n                this.loading=false\n                this.totalCount=Object.keys(this.list).length\n              })\n              .catch((error) => {\n                // eslint-disable-next-line\n                vm.$message({\n                        type: 'info',\n                        message: '出错啦！获取数据失败'\n                });\n                this.loading=false\n              });\n\n    },\r\n    getList() {\r\n      var vm=this\r\n      this.loading=true;\r\n      const path = 'http://127.0.0.1:5000/api/books/search';\r\n            axios.post(path, {\n               words:vm.words,\n               type:vm.value\n              })\n\n              .then(function (response) {\n              //  this.$refs[temp].resetFields();\n                 vm.list=response.data\n                 vm.loading=false\n                 vm.totalCount=Object.keys(vm.list).length\n                \n              })\n              .catch(function (error) {\n                 vm.$message({\n                    type: 'info',\n                    message: '查询失败'+error\n                  });\n                   vm.loading=false\n            })\r\n\r\n\r\n    },\r\n    handleCreate() {\r\n\r\n      this.dialogFormVisible = true\r\n\r\n    },\r\n     // 每页显示的条数\r\n     handleSizeChange(val) {\r\n         // 改变每页显示的条数\r\n         this.PageSize=val\r\n         // 注意：在改变每页显示的条数时，要将页码显示到第一页\r\n         this.currentPage=1\r\n     },\r\n       // 显示第几页\r\n     handleCurrentChange(val) {\r\n         // 改变默认的页数\r\n         this.currentPage=val\r\n     },\r\n     handleSearch(){\n\n       if(this.input==''){\n\n         this.initList()\n\n       }else{\n         this.words=this.input\n         this.getList()\n       }\n\n     },\n\n     submitForm(formName) {\n         var vm = this;\n         let mytoken=gettoken.state.token\n         this.$refs[formName].validate((valid) => {\n           if (valid) {\n             axios.post('http://127.0.0.1:5000/api/addbook', {\n                bookName:this.temp.bookName,\n                author:this.temp.author,\n                ISDN:this.temp.ISDN,\n                publisher:this.temp.publisher,\n                category:this.temp.category,\n                num:this.temp.num,\n                token:mytoken\n               })\n\n               .then(function (response) {\n                 // this.$refs[formName].resetFields();\n                 vm.$message({\n                      message: '添加成功',\n                      type: 'success'\n                  });\n\n               })\n               .catch(function (error) {\n                  vm.$message({\n                       showClose: true,\n                       message:'出错啦！您输入的ISDN已经存在或网络异常',\n                       type: 'warning'\n                     });\n                })\n               setTimeout(() => {\n                 this.initList()\n               }, 1.5 * 1000)\n           } else {\n             this.$message({\n                       showClose: true,\n                       message: '您的输入不合法，提交失败，请检查后重新提交',\n                       type: 'warning'\n                     });\n             return false;\n           }\n         });\n       },\n       resetForm(formName) {\n         this.$refs[formName].resetFields();\n       },\n       submitEdit(formName) {\n           var vm=this\n           let mytoken=gettoken.state.token\n           this.$refs[formName].validate((valid) => {\n\n             if (valid) {\n               this.$confirm('此修改操作不可逆, 是否继续', '提示', {\n                         confirmButtonText: '确定',\n                         cancelButtonText: '取消',\n                         type: 'warning'\n                       }).then(() => {\n                         axios.post('http://127.0.0.1:5000/api/editbook', {\n                            bookName:this.edit.bookName,\n                            author:this.edit.author,\n                            ISDN:this.edit.ISDN,\n                            publisher:this.edit.publisher,\n                            category:this.edit.category,\n                            num:this.edit.num,\n                            token:mytoken\n                           })\n\n                           .then(function (response) {\n\n                             vm.$message({\n                               type: 'success',\n                               message: '修改成功!'\n                             });\n                             vm.editVisible=false\n                           })\n                           .catch(function (error) {\n                             vm.$message({\n                                 type: 'info',\n                                 message: '修改出现异常'\n                               });\n                            })\n                           setTimeout(() => {\n                             vm.initList()\n                           }, 1.5 * 1000)\n\n                       }).catch(() => {\n                         vm.$message({\n                           type: 'info',\n                           message: '已取消删除'\n                         });\n               });\n\n             } else {\n               this.$message({\n                         showClose: true,\n                         message: '您的输入不合法，提交失败，请检查后重新提交',\n                         type: 'warning'\n                       });\n               return false;\n             }\n           });\n         },\n         resetEdit(formName) {\n           this.edit.bookName=this.resetEditMes.bookName;\n           this.edit.author=this.resetEditMes.author;\n           this.edit.ISDN=this.resetEditMes.ISDN;\n           this.edit.publisher=this.resetEditMes.publisher;\n           this.edit.category=this.resetEditMes.category;\n           this.edit.num=this.resetEditMes.num;\n         },\n         sortByDate(obj1, obj2) {\n              if(obj1.category==obj2.category){\n                let val1 = obj1.num\n                let val2 = obj2.num\n                return val1 - val2\n              }\n\n         },\r\n         fastISBN(data){\r\n           var vm=this\r\n\r\n           const path = '/fast/isbn/'+ vm.temp.ISDN ;\r\n                 axios.get(path)\r\n                   .then((res) => {\r\n                     // this.list = res.data;\r\n                     // this.loading=false\r\n                     // this.totalCount=Object.keys(this.list).length\n                      vm.temp.bookName=res.data.title\n                      vm.temp.author=res.data.book_info.作者\n                      vm.temp.publisher=res.data.book_info.出版社\n\r\n                   })\r\n                   .catch((error) => {\r\n                     // eslint-disable-next-line\r\n                     vm.$message({\r\n                             type: 'info',\r\n                             message: '获取数据失败了'\r\n                     });\r\n\r\n                   });\r\n         }\n\n\n\r\n\r\n    },\r\n    }\r\n",null]}