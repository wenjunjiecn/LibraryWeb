{"remainingRequest":"D:\\gitFactory\\library\\project\\libraryVueWeb\\node_modules\\babel-loader\\lib\\index.js!D:\\gitFactory\\library\\project\\libraryVueWeb\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\gitFactory\\library\\project\\libraryVueWeb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\gitFactory\\library\\project\\libraryVueWeb\\src\\views\\search\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\gitFactory\\library\\project\\libraryVueWeb\\src\\views\\search\\index.vue","mtime":1576776626691},{"path":"D:\\gitFactory\\library\\project\\libraryVueWeb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1575272867830},{"path":"D:\\gitFactory\\library\\project\\libraryVueWeb\\node_modules\\babel-loader\\lib\\index.js","mtime":1575272866404},{"path":"D:\\gitFactory\\library\\project\\libraryVueWeb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1575272867830},{"path":"D:\\gitFactory\\library\\project\\libraryVueWeb\\node_modules\\vue-loader\\lib\\index.js","mtime":1575272905142}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:\\\\gitFactory\\\\library\\\\project\\\\libraryVueWeb\\\\node_modules\\\\@babel\\\\runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nrequire(\"core-js/modules/es6.number.is-integer\");\n\nvar _index = _interopRequireDefault(require(\"@/directive/permission/index.js\"));\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar _user = _interopRequireDefault(require(\"../../../src/store/modules/user.js\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'ComplexTable',\n  directives: {\n    permission: _index.default\n  },\n  filters: {},\n  data: function data() {\n    var checkNum = function checkNum(rule, value, callback) {\n      if (!value) {\n        return callback(new Error('数量不能为空或小于等于0'));\n      }\n\n      setTimeout(function () {\n        if (!Number.isInteger(value)) {\n          callback(new Error('请输入数字值'));\n        } else {\n          if (value < 0) {\n            callback(new Error('数量必须大于0'));\n          } else {\n            callback();\n          }\n        }\n      }, 1000);\n    };\n\n    return {\n      list: [],\n      loading: false,\n      input: '',\n      searchoptions: [{\n        value: 'bookName',\n        label: '书名'\n      }, {\n        value: 'author',\n        label: '作者'\n      }, {\n        value: 'ISDN',\n        label: 'ISDN'\n      }, {\n        value: 'publisher',\n        label: '出版社'\n      }],\n      options: [{\n        value: '艺术',\n        label: '艺术'\n      }, {\n        value: '文学',\n        label: '文学'\n      }, {\n        value: '自然学科',\n        label: '自然学科'\n      }, {\n        value: '数理科学',\n        label: '数理科学'\n      }],\n      value: 'bookName',\n      words: null,\n      dialogFormVisible: false,\n      editVisible: false,\n      temp: {\n        bookName: '',\n        author: '',\n        ISDN: '',\n        publisher: '',\n        category: '',\n        num: ''\n      },\n      edit: {\n        bookName: '',\n        author: '',\n        ISDN: '',\n        publisher: '',\n        category: '',\n        num: ''\n      },\n      resetEditMes: {\n        bookName: '',\n        author: '',\n        ISDN: '',\n        publisher: '',\n        category: '',\n        num: ''\n      },\n      // 约束条件还没写完\n      rules: {\n        bookName: [{\n          required: true,\n          message: '请输入书名',\n          trigger: 'blur'\n        }, {\n          min: 1,\n          max: 10,\n          message: '长度在 1 到 10 个字符/中文',\n          trigger: 'blur'\n        }],\n        author: [{\n          required: true,\n          message: '请输入书名',\n          trigger: 'blur'\n        }, {\n          min: 1,\n          max: 6,\n          message: '长度在 1 到 6 个字符/中文',\n          trigger: 'blur'\n        }],\n        ISDN: [{\n          required: true,\n          message: '请输入ISDN',\n          trigger: 'blur'\n        }, {\n          min: 13,\n          max: 13,\n          message: '长度在 13个字符',\n          trigger: 'blur'\n        }],\n        publisher: [{\n          required: true,\n          message: '请输入出版社',\n          trigger: 'blur'\n        }, {\n          min: 1,\n          max: 10,\n          message: '长度在 1 到 10 个字符/中文',\n          trigger: 'blur'\n        }],\n        category: [{\n          required: true,\n          message: '请输入分类',\n          trigger: 'blur'\n        }, {\n          min: 1,\n          max: 10,\n          message: '长度在 1 到 10 个字符',\n          trigger: 'blur'\n        }],\n        num: [{\n          validator: checkNum,\n          trigger: 'blur'\n        }]\n      },\n      // 默认显示第几页\n      currentPage: 1,\n      // 总条数，根据接口获取数据长度\n      totalCount: 1,\n      // 个数选择器\n      pageSizes: [10, 20, 30, 40],\n      // 默认每页显示的条数（可修改）\n      PageSize: 10\n    };\n  },\n  created: function created() {\n    this.initList();\n  },\n  methods: {\n    handleEdit: function handleEdit(row) {\n      this.edit.bookName = row.bookName;\n      this.edit.author = row.author;\n      this.edit.ISDN = row.ISDN;\n      this.edit.publisher = row.publisher;\n      this.edit.category = row.category;\n      this.edit.num = Number(row.num);\n      this.resetEditMes.bookName = row.bookName;\n      this.resetEditMes.author = row.author;\n      this.resetEditMes.ISDN = row.ISDN;\n      this.resetEditMes.publisher = row.publisher;\n      this.resetEditMes.category = row.category;\n      this.resetEditMes.num = Number(row.num);\n      this.editVisible = true;\n    },\n    handleDelete: function handleDelete(row) {\n      var _this = this;\n\n      var vm = this;\n      this.$confirm('此操作将永久删除《' + row.bookName + '》，确定吗', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        _axios.default.post('http://127.0.0.1:5000/api/deletebook', {\n          bookName: row.bookName,\n          author: row.author,\n          ISDN: row.ISDN,\n          publisher: row.publisher,\n          category: row.category,\n          num: row.num\n        }).then(function (response) {\n          //  this.$refs[temp].resetFields();\n          vm.$message({\n            type: 'success',\n            message: '删除成功!'\n          });\n        }).catch(function (error) {\n          vm.$message({\n            type: 'info',\n            message: error\n          });\n        });\n\n        setTimeout(function () {\n          _this.initList();\n        }, 1.5 * 1000);\n      }).catch(function () {\n        _this.$message({\n          type: 'info',\n          message: '已取消删除'\n        });\n      });\n    },\n    initList: function initList() {\n      var _this2 = this;\n\n      var vm = this;\n      this.loading = true;\n      var path = 'http://127.0.0.1:5000/api/books';\n\n      _axios.default.get(path).then(function (res) {\n        _this2.list = res.data;\n        _this2.loading = false;\n        _this2.totalCount = Object.keys(_this2.list).length;\n      }).catch(function (error) {\n        // eslint-disable-next-line\n        vm.$message({\n          type: 'info',\n          message: '出错啦！获取数据失败'\n        });\n        _this2.loading = false;\n      });\n    },\n    getList: function getList() {\n      var vm = this;\n      this.loading = true;\n      var path = 'http://127.0.0.1:5000/api/books/search';\n\n      _axios.default.post(path, {\n        words: vm.words,\n        type: vm.value\n      }).then(function (response) {\n        //  this.$refs[temp].resetFields();\n        vm.list = response.data;\n        vm.loading = false;\n        vm.totalCount = Object.keys(vm.list).length;\n      }).catch(function (error) {\n        vm.$message({\n          type: 'info',\n          message: '查询失败' + error\n        });\n        vm.loading = false;\n      });\n    },\n    handleCreate: function handleCreate() {\n      this.dialogFormVisible = true;\n    },\n    // 每页显示的条数\n    handleSizeChange: function handleSizeChange(val) {\n      // 改变每页显示的条数\n      this.PageSize = val; // 注意：在改变每页显示的条数时，要将页码显示到第一页\n\n      this.currentPage = 1;\n    },\n    // 显示第几页\n    handleCurrentChange: function handleCurrentChange(val) {\n      // 改变默认的页数\n      this.currentPage = val;\n    },\n    handleSearch: function handleSearch() {\n      if (this.input == '') {\n        this.initList();\n      } else {\n        this.words = this.input;\n        this.getList();\n      }\n    },\n    submitForm: function submitForm(formName) {\n      var _this3 = this;\n\n      var vm = this;\n      var mytoken = _user.default.state.token;\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          _axios.default.post('http://127.0.0.1:5000/api/addbook', {\n            bookName: _this3.temp.bookName,\n            author: _this3.temp.author,\n            ISDN: _this3.temp.ISDN,\n            publisher: _this3.temp.publisher,\n            category: _this3.temp.category,\n            num: _this3.temp.num,\n            token: mytoken\n          }).then(function (response) {\n            // this.$refs[formName].resetFields();\n            vm.$message({\n              message: '添加成功',\n              type: 'success'\n            });\n          }).catch(function (error) {\n            vm.$message({\n              showClose: true,\n              message: '出错啦！您输入的ISDN已经存在或网络异常',\n              type: 'warning'\n            });\n          });\n\n          setTimeout(function () {\n            _this3.initList();\n          }, 1.5 * 1000);\n        } else {\n          _this3.$message({\n            showClose: true,\n            message: '您的输入不合法，提交失败，请检查后重新提交',\n            type: 'warning'\n          });\n\n          return false;\n        }\n      });\n    },\n    resetForm: function resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    submitEdit: function submitEdit(formName) {\n      var _this4 = this;\n\n      var vm = this;\n      var mytoken = _user.default.state.token;\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          _this4.$confirm('此修改操作不可逆, 是否继续', '提示', {\n            confirmButtonText: '确定',\n            cancelButtonText: '取消',\n            type: 'warning'\n          }).then(function () {\n            _axios.default.post('http://127.0.0.1:5000/api/editbook', {\n              bookName: _this4.edit.bookName,\n              author: _this4.edit.author,\n              ISDN: _this4.edit.ISDN,\n              publisher: _this4.edit.publisher,\n              category: _this4.edit.category,\n              num: _this4.edit.num,\n              token: mytoken\n            }).then(function (response) {\n              vm.$message({\n                type: 'success',\n                message: '修改成功!'\n              });\n              vm.editVisible = false;\n            }).catch(function (error) {\n              vm.$message({\n                type: 'info',\n                message: '修改出现异常'\n              });\n            });\n\n            setTimeout(function () {\n              vm.initList();\n            }, 1.5 * 1000);\n          }).catch(function () {\n            vm.$message({\n              type: 'info',\n              message: '已取消删除'\n            });\n          });\n        } else {\n          _this4.$message({\n            showClose: true,\n            message: '您的输入不合法，提交失败，请检查后重新提交',\n            type: 'warning'\n          });\n\n          return false;\n        }\n      });\n    },\n    resetEdit: function resetEdit(formName) {\n      this.edit.bookName = this.resetEditMes.bookName;\n      this.edit.author = this.resetEditMes.author;\n      this.edit.ISDN = this.resetEditMes.ISDN;\n      this.edit.publisher = this.resetEditMes.publisher;\n      this.edit.category = this.resetEditMes.category;\n      this.edit.num = this.resetEditMes.num;\n    },\n    sortByDate: function sortByDate(obj1, obj2) {\n      if (obj1.category == obj2.category) {\n        var val1 = obj1.num;\n        var val2 = obj2.num;\n        return val1 - val2;\n      }\n    }\n  }\n};\nexports.default = _default;",null]}